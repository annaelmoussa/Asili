services:
  mongo:
    image: mongo
    volumes:
      - mongo_data:/data/db
    networks:
      - backend
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}

  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - backend
    depends_on:
      - postgres

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://mongo:27017/${MONGO_INITDB_DATABASE}
      POSTGRES_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongo
      - postgres
    networks:
      - backend

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
    networks:
      - frontend

volumes:
  mongo_data:
  postgres_data:

networks:
  backend:
  frontend:
